<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>模板</title>
    <url>/2021/10/31/bug_report/</url>
    <content><![CDATA[<hr>
<p>name: Bug report<br>
about: Create a report to help us improve<br>
title: ‘’<br>
labels: ‘’<br>
assignees: ‘’</p>
<hr>
<!-- Do not delete the template (不要刪除模板) -->
<!--
IMPORTANT: Please follow the template to create a new issue.
重要：請依照該模板來提交。

If you upgrade from the old version, and an error occurs when running, please copy the new content in the config to the butterfly.yml
如果你是由舊版本升級到新版，執行時出現報錯，請首先把config裡新的內容複製到舊的butterfly設定去(如有)

If you are a problem when visiting the website, please open your browser 'developer tools (shortcut F12)' and check the console if there is an error, include your website address in the feedback
如果你是線上訪問出現問題，請檢查瀏覽器‘開發人員工具（快捷鍵F12）’的console是否有報錯，反饋時附上你的網站
-->
<h2 id="I-want-to-create-a-Bug-report-我想要建立一個-Bug-report">I want to create a Bug report <!-- 我想要建立一個 Bug report --></h2>
<!-- Check all with "x" especially FAQ & Documentation!! (使用 "x" 選擇) -->
<!-- 請確認是否都已經翻閲過如下的資料, 尤其是安裝文件！！ -->
<ul>
<li>[] Yes, I have read <a href="https://hexo.io/docs/">Hexo Docs page</a>, especially <a href="https://hexo.io/docs/templates.html">Templates</a>, <a href="https://hexo.io/docs/variables.html">Variables</a>, <a href="https://hexo.io/docs/helpers.html">Helpers</a> and <a href="https://hexo.io/docs/troubleshooting.html">Troubleshooting</a>.</li>
<li>[] Yes, I have read <a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly Documentation</a>.</li>
<li>[] And yes, I already searched for current <a href="https://github.com/jerryc127/hexo-theme-butterfly/issues?utf8=%E2%9C%93&amp;q=is%3Aissue">issues</a> and this did not help me.</li>
</ul>
<h2 id="Butterfly-Information">Butterfly Information</h2>
<!-- Butterfly的版本 -->
<!-- 檢視主題的package.json -->
<p><strong>Butterfly Version:</strong></p>
<!-- Windows/macOS/Linux/Android/iOS -->
<p><strong>Platform:</strong></p>
<!-- Chrome/Safari/FireFox/.. -->
<p><strong>Browser:</strong></p>
<h2 id="Expected-behavior-預期行為">Expected behavior <!-- (預期行為) --></h2>
<h2 id="Actual-behavior-實際行為">Actual behavior <!-- (實際行為) --></h2>
<h2 id="Steps-to-reproduce-the-behavior-重現步驟">Steps to reproduce the behavior <!-- (重現步驟) --></h2>
<ol>
<li>Go to ‘…’</li>
<li>Click on ‘…’</li>
<li>Scroll down to ‘…’</li>
<li>See error</li>
</ol>
<!-- If applicable, add screenshots to help explain your problem -->
<!-- 請儘量提供截圖來定位問題 -->
<h2 id="Screenshots-截圖">Screenshots <!-- (截圖) --></h2>
<!-- Provide your website to find the issues -->
<h2 id="Website">Website</h2>
<h2 id="Describe-the-bug">Describe the bug</h2>
]]></content>
  </entry>
  <entry>
    <title>免备案国外最佳广告联盟推荐</title>
    <url>/9999/09/09/%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h1>以下排名不分先后</h1>
<hr>
<h3 id="免备案国外最佳广告联盟推荐">免备案国外最佳广告联盟推荐</h3>
<h1>1.谷歌的AdSense</h1>
<p>Google Adsense是世界上最好最大的广告网络。Adsense因其较高的每千次展示费用而受到欢迎。但是，其帐户审批相当困难。Adsense提供各种广告格式，包括移动广告，展示广告，移动广告和搜索结果广告。其最低支付限额是100美元。好东西是没有最低流量要求成为出版商。</p>
<p>最好的功能</p>
<p>非常高的支付率<br>
非常容易使用<br>
发布商可以自定义广告显示并运行图片，文字，颜色<br>
发布商可以在一个帐户的多个网站上使用AdSense广告</p>
<p><a href="https://Adsense.com">体验广告效果链接</a></p>
<p><a href="https://Adsense.com">谷歌的AdSense官网</a></p>
<h1>2.PropellerAds</h1>
<p>PropellerAds是2018-2019年度最好的cpm广告网络之一，也是支付率最高的cpm广告网络之一。如果您正在寻找移动广告，弹出窗口，对话框和插页式广告，那么PorpellerAds是您最适合的CPM网络。出版商将获得10美元的有效每千次展示费用，这个每千次展示费率取决于访问国家，如果您的网站拥有高流量来自英国，美国，那么您可以预期这个广告网络很多钱。它提供了许多广告格式供用户赚取，这些广告格式是横幅广告，原生直接广告，流行下广告，非页内广告，上推广告，对话广告。螺旋桨广告支付净30基础。最低支付限额为100美元，发布可以通过电汇和PayPal提款。</p>
<p>获得批准的要求：</p>
<p>没有最低流量要求<br>
网站必须是基于内容的，而不是简单的链接或广告列表<br>
网站不得在“正在建设中”<br>
网站不得包含与成人相关的内容<br>
最好的功能</p>
<p>PropellerAds在Net 30上支付<br>
其最低支付限额是$ 100<br>
实时统计报告系统<br>
付款方式是电汇和PayPal<br>
PropellerAds提供多种广告格式<br>
支持国内IP,Propellerads本身有banner和弹窗广告 , 但是banner广告收入极低 , 所以不建议去做 反而弹窗收入高（垃圾站点使用高）</p>
<p><a href="PropellerAds.html">体验广告效果链接</a></p>
<p><a href="https://publishers.propellerads.com">PropellerAds官网</a></p>
<h1>3.Traffic Shop</h1>
<p>Traffic Shop广告网络为广告商和发布商提供了很多价值。</p>
<p>工作不同而且简单。</p>
<p>Traffic Shop受到全球数千家客户的信赖。</p>
<p>出版商和广告商可以在这里赚大钱。因此，有机会通过Traffic Shop进行广告宣传和货币化。</p>
<p>它提供广泛的广告格式，包含数百万次广告展示。</p>
<p>广告格式包括：</p>
<p>横幅： 它提供IAB认证的所有流行横幅尺寸<br>
背后弹出式窗口： 强大的跨浏览器PopUnder脚本<br>
脱脂： 这是在目标受众面前展示广告的另一种好方法<br>
移动： 移动广告有很多选项，例如文字和富媒体横幅，重定向和背后弹出式广告</p>
<p>广告客户可以享受全球覆盖以及跨平台广告带来的好处，从而吸引适当的受众群体。</p>
<p>他们可以期待GEO，语言，设备，操作系统，浏览器等的灵活和高级定位。广告客户可以获得实时转化跟踪的优势，以跟踪效果，收入和支出。</p>
<p>他们可以选择各种定价模式：CPM，CPC。广告客户可以安排广告系列并最大化投资回报率和转化次数。此外，还有实时详细的报告和统计数据。</p>
<p>借助流量商店，发布商可以获得最佳的流量费率，并最大限度地提高网络收入和移动广告资源。他们可以访问所有流行的广告格式，以便对其流量进行货币化。通过Traffic Shop，您可以访问可自定义的高级实时报告和报告模板。</p>
<p>交通商店以快速支付而闻名。他们提供各种支付方式，如PayPal，WebMoney，银行电汇，Paxum，ePayments和比特币。最低支付门槛仅为50美元。这是一个值得信赖的网络。所有广告系列都通过安全系统确保广告活动的安全性。</p>
<p><a href="TrafficShop.html">体验广告效果链接</a></p>
<p><a href="https://www.trafficshop.com">官网</a></p>
<h1>4.Adsterra</h1>
<p>Adsterra Network作为一家可靠的数字广告公司脱颖而出，为全球广告商和媒体合作伙伴提供基于性能的解决方案。</p>
<p>它有一些令人印象深刻的统计数据支持其作为领先的数字广告公司的主张。 Adsterra每月提供超过10 BN的展示次数。它涵盖了近200个GEO。它提供了大约20,000个成功的活动。</p>
<p>此外，Adsterra已发展成为发展最快的成人广告网络之一。它为桌面和移动设备提供广告解决方案，包括：</p>
<p>显示横幅</p>
<p>Popunders</p>
<p>直接链接</p>
<p>前贴片视频</p>
<p>推送通知</p>
<p>插页广告</p>
<p>通过Adsterra，广告客户可以轻松且经济高效地启动，管理和分析其广告活动。他们可以选择各种付款模式，例如CPM，CPA，CPL，CPO和CPI。</p>
<p>因此，广告客户有机会获得更多展示次数，潜在客户，转化次数和销售额。 Adsterra提供先进的优化技术，广告客户可以使用该技术为每个广告素材和展示位置获得最有效的结果。</p>
<p>通过Adsterra，出版商可以获得许多优势。</p>
<p>成为Adsterra Publisher Network的一员，并利用其智能和先进技术轻松获利。获得100％的填充率和有竞争力的CPM。 Adsterra通过其内部和第三方欺诈检测系统提供最大的安全性。</p>
<p>发布商可以依靠其准时付款政策（NET 15）。此外，Adsterra还提供大量提款选项，包括PayPal，Wire Transfer，Web Money，Paxum，Paxum和比特币。最低支付门槛是100美元。</p>
<p>您甚至可以将您的朋友推荐给Adsterra Network，并有机会通过推荐计划赚取额外收入。您可以获得由您在一生中推荐给Adsterra的发布商产生的收入的5％。</p>
<p><a href="Adsterra.html">体验广告效果链接</a></p>
<p><a href="https://publishers.adsterra.com/referral/bgEmFDxthL">官网</a></p>
<h1>5.Popcash</h1>
<p>Popcash是中小型发布商的顶级cpm广告网络之一。它也是一个专业和流行的流行广告网络。它使用CPC和CPM付款模式向用户付款，并为用户提供高支付率。因为它有很多广告客户遍布世界各地的广告客户。我已经在我的2个网站上使用过PopCash，我满意他们的CPM费率。我也收到了很多他们的付款。PopCash.net的另一个好处是，它计数来自同一个访问者的多个印象。一些CPM广告网络，他们不计算所有的印象。另外popcash.net是最好的低流量网站cpm广告网络或最好的cpm广告网络印度出版商加入。</p>
<p>PopCash的要求/限制：</p>
<p>网站不得包含暴力内容和恶意软件<br>
不得将假流量发送给PopCash<br>
用户不得修改他们的广告代码<br>
不能用PopCash创建多个账户<br>
最好的功能</p>
<p>低的最低支付限额是10美元<br>
每日支付<br>
10％的推荐佣金<br>
PayPal，Payza，Paxum，Wire，WebMoney和Skrill等多种付款方式<br>
先进的统计报告系统<br>
良好的客户支持<br>
联盟注册简单, 收益快</p>
<p><a href="Popcash.html">体验广告效果链接</a></p>
<p><a href="https://popcash.net/home/334724">官网</a></p>
<h1>6.RevenueHits</h1>
<p>RevenueHits是面向中小型发布商的最佳广告网络，它是一个基于以色列的基于cpm的popunder广告网络。它始于2008年，每天的投放量超过30亿次。RevenueHits为其所有发布商提供高Ecpm率，目前它提供最高50美元的有效每千次展示费用，最低为0.50美元，这些费率取决于访问国家。</p>
<p>最好的功能</p>
<p>没有最低限度的流量请求<br>
最低支付限额只有20美元<br>
24/4客户支持<br>
支持所有语言<br>
个人客户经理<br>
多种广告格式</p>
<p><a href="RevenueHits.html">体验广告效果链接</a></p>
<p><a href="https://www.revenuehits.com/lps/pubref/?ref=@RH@gDamDZhostA_tk2NfGAf7nnSiUDV5iGD">官网</a></p>
<h1>7.Yllix</h1>
<p>Yllix媒体是作为Google Adsense之类的发布商或广告客户的另一种广告选择。您可以将广告媒体网站用于各种标准广告设置，例如横幅广告，弹出式广告，图层广告，重定向广告，Prepop广告，全页广告，尺寸大小分别为300×250,728×90,468×60,120×600,160×600。发布商和广告商的好消息是YllixMedia（Yllix Inc.）或Yllix Media网站允许任何类型的网站，博客，论坛或任何其他网站。小博客不能使用AdSense或其他高收入的大型广告网络。因为获得AdSense认证非常困难。所以他们想要使用一些小广告网络。但与adsense这样的大型广告网络相比，小型广告网络不会付出高昂的代价。Yllix媒体也是一个小型广告网络。许多出版商要求我撰写yllix媒体评论。Yllix是一个新颖的广告网络，适合小型发布商。</p>
<p><a href="Yllix.html">体验广告效果链接</a></p>
<p><a href="https://pub.yllix.com">官网</a></p>
<h1>8.PlugRush</h1>
<p>PlugRush于2007年底开始运作，现已成为领先的广告网络。</p>
<p>它允许网站管理员轻松快速地交易流量，买入或卖出点击流量，移动流量以及PopUnder流量。 PlugRush非常透明，可为广告客户和发布商带来出色的效果。</p>
<p>PlugRush提供了几个高影响力的广告单元，非常适合作为AdSense替代方案。此外，广告格式是广告和从广告系列中获得更多收入的最佳选择。</p>
<p>使用PlugRush的广告格式和广告尺寸：</p>
<p>中矩形横幅： 它在嵌入时表现最佳 在文本内容中 或在文章的最后。他们成功地在移动设备上产生了高点击率。</p>
<p>排行榜横幅： 此网页横幅格式放置在页面顶部（主要内容之前）时效果很好。</p>
<p>垂直原生广告： 这些外观和感觉就像自然内容。它成功地为内容营销人员建立信任和最佳。</p>
<p>摩天大楼横幅： 它是标准的展示横幅网页格式。它通常用于侧面，内容之间以及页面边缘。</p>
<p>横向原生广告： 它是原生广告，适用于移动设备和桌面设备。</p>
<p>半页横幅： 它具有视觉冲击力的广告尺寸，也是展示次数最快的广告单元之一。</p>
<p>桌面流行音乐： OnClick Pops可用于覆盖数千名参与客户。你得到每个访客的报酬。</p>
<p>PlugRush是一个广告平台，可让您在几分钟内创建和运行您的广告系列。它既适合初学者也适合专家。</p>
<p>使用PlugRush，广告客户有机会获得大量流量。访问这个全球网络并覆盖数百万潜在客户。 PlugRush提供实时统计信息。其反欺诈技术可以保护您免受在线欺诈，虚假点击和机器人攻击。</p>
<p>您可以直接控制流量的来源。此外，您可以获得快速广告批准，并且广告客户可以使用多种付款方式，例如PayPal，Paxum，电汇或信用卡。</p>
<p>借助PlugRush，发布商有机会增加其网站的利润。已有超过30,000个网站使用它。您需要注册PlugRush。将代码放在您的网站上并开始赚钱。</p>
<p>PlugRush提供99％的填充率。它们提供实时统计数据。它为您提供优惠价格。安全是PlugRush的首要任务。他们手动监控广告资源，并自动全天候监控。广告代码支持https协议以保护您的安全。</p>
<p>此外，您可以得到及时付款（根据要求）。他们通过PayPal，Paxum，Wire Transfer和Firstchoice Pay付款。最低支付门槛为25美元。在您提交提款请求后24小时内支付收入。</p>
<p><a href="PlugRush.html">体验广告效果链接</a></p>
<p><a href="https://www.plugrush.com/?ref=249793">官网</a></p>
<h1>9.Slimspots</h1>
<p>Slimspots是最受欢迎，最具创新性和成功的成人广告网络之一。它是一个基于CPA的广告网络，成立于2013年6月。它使广告商能够在参与的网站上放置他们的广告材料。 Slimspots为广告商，发布商和媒体买家提供了大量商品。广告客户可以通过使用基于效果的营销来最大化其投资回报率。</p>
<p>它将它们与行业顶级发布商联系起来。另一方面，出版商可以期待最好的有效每千次展示费用，有利可图的优惠，有竞争力的付款以及每周付款。借助Slimspots成人广告网络，您可以获得最佳的在线营销需求。您将受益于全球所有国家/地区的广泛流量。 Slimspots成人广告网络为您提供与各种垂直行业的新客户建立联系的机会。</p>
<p><a href="Slimspots.html">体验广告效果链接</a></p>
<p><a href="https://slimspots.com/register/24662">官网</a></p>
]]></content>
      <categories>
        <category>categories</category>
      </categories>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2021/10/31/feature_request/</url>
    <content><![CDATA[<p><strong>Is your feature request related to a problem? Please describe.</strong><br>
A clear and concise description of what the problem is. Ex. I’m always frustrated when […]</p>
<p><strong>Describe the solution you’d like</strong><br>
A clear and concise description of what you want to happen.</p>
<p><strong>Describe alternatives you’ve considered</strong><br>
A clear and concise description of any alternative solutions or features you’ve considered.</p>
<p><strong>Additional context</strong><br>
Add any other context or screenshots about the feature request here.</p>
]]></content>
  </entry>
  <entry>
    <title>README_zh</title>
    <url>/2021/10/31/README_zh/</url>
    <content><![CDATA[<h1>首先申明：这个库是基于 <a href="https://github.com/EverythingMe/overscroll-decor">Over-Scroll</a></h1>
<hr>
<h1>Elasticity 支持 Android 原生控件 RecyclerView, ListView, GridView, ScrollView …</h1>
<p>这个库可以让几乎所有的 Android View 具有类似 MIUI 系统里面的一个弹性拉伸的效果。具体的效果可以参考下面的动图。</p>
<p><a href="elasticity-app-debug.apk">demo apk</a></p>
<p><img src="demo.gif" alt="demo"></p>
<h1>Gradle 依赖</h1>
<p>在你的项目的 <code>build.gradle</code> 文件添加如下内容:</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        ...</span><br><span class="line">        maven &#123; url <span class="string">&quot;https://jitpack.io&quot;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在你的 module 的 <code>build.gradle</code> 文件中添加如下内容:</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">    compile <span class="string">&#x27;com.github.XanderWang:elasticity:1.0.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>使用</h1>
<h3 id="RecyclerView">RecyclerView</h3>
<p>支持线性和瀑布流的 layout managers，可以很容易接入。实例接入代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);</span><br><span class="line">    </span><br><span class="line"><span class="comment">// Horizontal</span></span><br><span class="line">ElasticityHelper.setUpOverScroll(recyclerView, ORIENTATION.HORIZONTAL);</span><br><span class="line"><span class="comment">// Vertical</span></span><br><span class="line">ElasticityHelper.setUpOverScroll(recyclerView, ORIENTATION.VERTICAL);</span><br></pre></td></tr></table></figure>
<h3 id="RecyclerView-items-的-swiping-dragging-支持">RecyclerView items 的 swiping / dragging 支持</h3>
<p>查看 <em>高级用法</em> .</p>
<h3 id="ListView">ListView</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ListView listView = (ListView) findViewById(R.id.list_view);</span><br><span class="line">ElasticityHelper.setUpOverScroll(listView);</span><br></pre></td></tr></table></figure>
<h3 id="GridView">GridView</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GridView gridView = (GridView) findViewById(R.id.grid_view);</span><br><span class="line">ElasticityHelper.setUpOverScroll(gridView);</span><br></pre></td></tr></table></figure>
<h3 id="ViewPager">ViewPager</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);</span><br><span class="line">ElasticityHelper.setUpOverScroll(viewPager);</span><br></pre></td></tr></table></figure>
<h3 id="ScrollView-HorizontalScrollView">ScrollView, HorizontalScrollView</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ScrollView scrollView = (ScrollView) findViewById(R.id.scroll_view);</span><br><span class="line">ElasticityHelper.setUpOverScroll(scrollView);</span><br><span class="line">    </span><br><span class="line">HorizontalScrollView horizontalScrollView = (HorizontalScrollView) findViewById(R.id.horizontal_scroll_view);</span><br><span class="line">ElasticityHelper.setUpOverScroll(horizontalScrollView);</span><br></pre></td></tr></table></figure>
<h3 id="任何-View-Text-Image…-可以认为一开始就是-Over-Scroll-状态">任何 View - Text, Image… (可以认为一开始就是 Over-Scroll 状态)</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">View view = findViewById(R.id.demo_view);</span><br><span class="line">    </span><br><span class="line"><span class="comment">// Horizontal</span></span><br><span class="line">ElasticityHelper.setUpStaticOverScroll(view, ORIENTATION.HORIZONTAL);</span><br><span class="line"><span class="comment">// Vertical</span></span><br><span class="line">ElasticityHelper.setUpStaticOverScroll(view, ORIENTATION.VERTICAL);</span><br></pre></td></tr></table></figure>
<h1>高级用法</h1>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Horizontal RecyclerView</span></span><br><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);</span><br><span class="line"><span class="keyword">new</span> HorizontalElasticityBounceEffect(<span class="keyword">new</span> RecyclerViewElasticityAdapter(recyclerView));</span><br><span class="line"></span><br><span class="line"><span class="comment">// ListView (vertical)</span></span><br><span class="line">ListView listView = (ListView) findViewById(R.id.list_view);</span><br><span class="line"><span class="keyword">new</span> VerticalElasticityBounceEffect(<span class="keyword">new</span> AbsListViewElasticityAdapter(listView));</span><br><span class="line"></span><br><span class="line"><span class="comment">// GridView (vertical)</span></span><br><span class="line">GridView gridView = (GridView) findViewById(R.id.grid_view);</span><br><span class="line"><span class="keyword">new</span> VerticalElasticityBounceEffect(<span class="keyword">new</span> AbsListViewElasticityAdapter(gridView));</span><br><span class="line"></span><br><span class="line"><span class="comment">// ViewPager</span></span><br><span class="line">ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);</span><br><span class="line"><span class="keyword">new</span> HorizontalElasticityBounceEffect(<span class="keyword">new</span> ViewPagerElasticityAdapter(viewPager));</span><br><span class="line"></span><br><span class="line"><span class="comment">// A simple TextView - horizontal</span></span><br><span class="line">View textView = findViewById(R.id.title);</span><br><span class="line"><span class="keyword">new</span> HorizontalElasticityBounceEffect(<span class="keyword">new</span> StaticElasticityAdapter(view));</span><br></pre></td></tr></table></figure>
<h3 id="RecyclerView-借助-ItemTouchHelper-实现-item-swiping-dragging">RecyclerView 借助 <a href="http://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.html">ItemTouchHelper</a> 实现 item swiping / dragging</h3>
<p>理论上可以很好的支持 item swiping / dragging (based on <a href="http://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.html">ItemTouchHelper</a>)， 但是还是建议按如下代码使用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Normally you would attach an ItemTouchHelper &amp; a callback to a RecyclerView, this way:</span></span><br><span class="line">RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);</span><br><span class="line">ItemTouchHelper.Callback myCallback = <span class="keyword">new</span> ItemTouchHelper.Callback() &#123;</span><br><span class="line">	...</span><br><span class="line">&#125;;</span><br><span class="line">ItemTouchHelper myHelper = <span class="keyword">new</span> ItemTouchHelper(myCallback);</span><br><span class="line">myHelper.attachToRecyclerView(recyclerView);</span><br><span class="line"></span><br><span class="line"><span class="comment">// INSTEAD of attaching the helper yourself, simply use the dedicated adapter c&#x27;tor, e.g.:</span></span><br><span class="line"><span class="keyword">new</span> VerticalElasticityBounceEffect(<span class="keyword">new</span> RecyclerViewElasticityAdapter(recyclerView, myCallback));</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>查看更多的 swiping / dragging 原理, 可以参考 <a href="https://medium.com/@ipaulpro/drag-and-swipe-with-recyclerview-b9456d2b1aaf">this useful tutorial</a>.</p>
<h3 id="Over-Scroll-Listeners">Over-Scroll Listeners</h3>
<p>提供 2 种监听的方式来获取滚动过程中的状态，具体如下</p>
<h4 id="State-Change-Listener">State-Change Listener</h4>
<p>状态改变监听，通过这个监听回调，你可以知道状态的改变，使用范例如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Note: over-scroll is set-up using the helper method.</span></span><br><span class="line">IElasticity elasticity = ElasticityHelper.setUpOverScroll(recyclerView, ORIENTATION.HORIZONTAL);</span><br><span class="line"></span><br><span class="line">elasticity.setOverScrollStateListener(<span class="keyword">new</span> IElasticityStateListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onOverScrollStateChange</span><span class="params">(IElasticity elasticity, <span class="keyword">int</span> oldState, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">	    <span class="keyword">switch</span> (newState) &#123;</span><br><span class="line">	        <span class="keyword">case</span> STATE_IDLE:</span><br><span class="line">	            <span class="comment">// No over-scroll is in effect.</span></span><br><span class="line">	            <span class="keyword">break</span>;</span><br><span class="line">	        <span class="keyword">case</span> STATE_DRAG_START_SIDE:</span><br><span class="line">	            <span class="comment">// Dragging started at the left-end.</span></span><br><span class="line">	            <span class="keyword">break</span>;</span><br><span class="line">	        <span class="keyword">case</span> STATE_DRAG_END_SIDE:</span><br><span class="line">	            <span class="comment">// Dragging started at the right-end.</span></span><br><span class="line">	            <span class="keyword">break</span>;</span><br><span class="line">	        <span class="keyword">case</span> STATE_BOUNCE_BACK:</span><br><span class="line">	            <span class="keyword">if</span> (oldState == STATE_DRAG_START_SIDE) &#123;</span><br><span class="line">	                <span class="comment">// Dragging stopped -- view is starting to bounce back from the *left-end* onto natural position.</span></span><br><span class="line">	            &#125; <span class="keyword">else</span> &#123; <span class="comment">// i.e. (oldState == STATE_DRAG_END_SIDE)</span></span><br><span class="line">	                <span class="comment">// View is starting to bounce back from the *right-end*.</span></span><br><span class="line">	            &#125;</span><br><span class="line">	            <span class="keyword">break</span>;</span><br><span class="line">	    &#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Real-time-Updates-Listener">Real-time Updates Listener</h4>
<p>滑动过程监听，可以监听滑动过程中手势的具体变化。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Note: over-scroll is set-up by explicity instantiating a decorator rather than using the helper; The two methods can be used interchangeably for registering listeners.</span></span><br><span class="line">IElasticity elasticity = <span class="keyword">new</span> VerticalElasticityBounceEffect(<span class="keyword">new</span> RecyclerViewElasticityAdapter(recyclerView, itemTouchHelperCallback));</span><br><span class="line"></span><br><span class="line">elasticity.setOverScrollUpdateListener(<span class="keyword">new</span> IElasticityUpdateListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onOverScrollUpdate</span><span class="params">(IElasticity elasticity, <span class="keyword">int</span> state, <span class="keyword">float</span> offset)</span> </span>&#123;</span><br><span class="line">    	<span class="keyword">final</span> View view = elasticity.getView();</span><br><span class="line">    	<span class="keyword">if</span> (offset &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    		<span class="comment">// &#x27;view&#x27; is currently being over-scrolled from the top.</span></span><br><span class="line">    	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (offset &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    		<span class="comment">// &#x27;view&#x27; is currently being over-scrolled from the bottom.</span></span><br><span class="line">    	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    		<span class="comment">// No over-scroll is in-effect.</span></span><br><span class="line">    		<span class="comment">// This is synonymous with having (state == STATE_IDLE).</span></span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这两个监听可以单独使用，也可以同时使用，具体看你的需求。</p>
<h3 id="自定义-Views">自定义 Views</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">final</span> CustomView view = (CustomView) findViewById(R.id.custom_view);</span><br><span class="line"><span class="keyword">new</span> VerticalElasticityBounceEffect(<span class="keyword">new</span> IElasticityAdapter() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isInAbsoluteStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	    <span class="comment">// canScrollUp() is an example of a method you must implement</span></span><br><span class="line">        <span class="keyword">return</span> !view.canScrollUp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isInAbsoluteEnd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	     <span class="comment">// canScrollDown() is an example of a method you must implement</span></span><br><span class="line">        <span class="keyword">return</span> !view.canScrollDown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="完全自定义">完全自定义</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// Make over-scroll applied over a list-view feel more &#x27;stiff&#x27;</span></span><br><span class="line"><span class="keyword">new</span> VerticalElasticityBounceEffect(<span class="keyword">new</span> AbsListViewElasticityAdapter(view),</span><br><span class="line">        <span class="number">5f</span>, <span class="comment">// Default is 3</span></span><br><span class="line">        VerticalElasticityBounceEffect.DEFAULT_TOUCH_DRAG_MOVE_RATIO_BCK,</span><br><span class="line">        VerticalElasticityBounceEffect.DEFAULT_DECELERATE_FACTOR,</span><br><span class="line">        VerticalElasticityBounceEffect.MAX_SCALE_FACTOR);</span><br><span class="line">                </span><br><span class="line"><span class="comment">// Make over-scroll applied over a list-view bounce-back more softly</span></span><br><span class="line"><span class="keyword">new</span> VerticalElasticityBounceEffect(<span class="keyword">new</span> AbsListViewElasticityAdapter(view),</span><br><span class="line">        VerticalElasticityBounceEffect.DEFAULT_TOUCH_DRAG_MOVE_RATIO_FWD,</span><br><span class="line">        VerticalElasticityBounceEffect.DEFAULT_TOUCH_DRAG_MOVE_RATIO_BCK,</span><br><span class="line">        -<span class="number">1f</span> <span class="comment">// Default is -2,</span></span><br><span class="line">        VerticalElasticityBounceEffect.MAX_SCALE_FACTOR);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="感谢">感谢</h2>
<p>App icons by <a href="http://somerandomdude.com/work/iconic/">P.J. Onori</a>,<br>
<a href="http://graphicriver.net/item/wirecons-vector-icons/4586710?ref=tmthymllr">Timothy Miller</a>,<br>
<a href="http://icons4android.com">Icons4Android</a>,<br>
<a href="http://icons8.com/android-icons">Icons8.com</a></p>
<h1>修改的 bug</h1>
<ol>
<li>修改了某些情况下点击不响应的问题</li>
</ol>
]]></content>
      <categories>
        <category>categories</category>
      </categories>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
  <entry>
    <title>壁紙</title>
    <url>/2021/10/31/png/index/</url>
    <content><![CDATA[<div class="gallery-group-main">

  <figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">壁紙</div>
  <p>收藏的一些壁紙</p>
  <a href='/Gallery/wallpaper'></a>
  </figcaption>
  </figure>
  

  <figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">漫威</div>
  <p>關於漫威的圖片</p>
  <a href='/Gallery/marvel'></a>
  </figcaption>
  </figure>
  

  <figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">OH MY GIRL</div>
  <p>關於OH MY GIRL的圖片</p>
  <a href='/Gallery/ohmygirl'></a>
  </figcaption>
  </figure>
  
</div>]]></content>
  </entry>
</search>
